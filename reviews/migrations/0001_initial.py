# Generated by Django 2.0.2 on 2018-02-16 16:59

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=5, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('text', models.TextField(max_length=600)),
                ('easiness', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], default=3)),
                ('clarity', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], default=3)),
                ('helpfulness', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], default=3)),
                ('overall', models.DecimalField(decimal_places=2, default=3.0, max_digits=10, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(5.0)])),
                ('grade', models.CharField(choices=[('A', 'A'), ('A-', 'A-'), ('B+', 'B+'), ('B', 'B'), ('B-', 'B-'), ('C+', 'C+'), ('C', 'C'), ('C-', 'C-'), ('D+', 'D+'), ('D', 'D'), ('F', 'F'), ('N/A', 'Not Applicable')], default='N/A', max_length=3)),
                ('is_proper_grade', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(1), django.core.validators.MinValueValidator(0)])),
                ('grade_as_a_number', models.IntegerField(default=0)),
                ('votes', models.IntegerField(default=0)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_reviews', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('votes', '-updated'),
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=225)),
                ('code', models.CharField(blank=True, max_length=225, null=True)),
                ('ten_years_degree', models.CharField(blank=True, choices=[('O Levels', 'O Levels'), ('SSC', 'SSC'), ('None', 'None')], max_length=225, null=True)),
                ('twelve_years_degree', models.CharField(blank=True, choices=[('A Levels', 'A Levels'), ('HSC', 'HSC'), ('None', 'None')], max_length=225, null=True)),
                ('undergraduate_degree', models.CharField(blank=True, max_length=225, null=True)),
                ('graduate_degree', models.CharField(blank=True, max_length=225, null=True)),
                ('phd_degree', models.CharField(blank=True, max_length=225, null=True)),
                ('is_professor', models.BooleanField(default=False)),
                ('is_tutor', models.BooleanField(default=False)),
                ('university', models.CharField(blank=True, choices=[('North South University', 'North South University'), ('BRAC University', 'BRAC University'), ('Independent University Bangladesh', 'Independent University Bangladesh')], max_length=225, null=True)),
                ('department', models.CharField(blank=True, choices=[('Business & Economics', 'Business & Economics'), ('Engineering & Physical Sciences', 'Engineering & Physical Sciences'), ('Humanities & Social Sciences', 'Humanities & Social Sciences'), ('Health & Life Sciences', 'Health & Life Sciences')], max_length=225, null=True)),
                ('verified', models.BooleanField(default=False)),
                ('number_of_reviews', models.IntegerField(default=0)),
                ('easiness', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(5.0)])),
                ('clarity', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(5.0)])),
                ('helpfulness', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(5.0)])),
                ('overall', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(5.0)])),
                ('number_of_grades', models.IntegerField(default=0)),
                ('average_grade', models.CharField(default='N/A', max_length=3)),
                ('courses', models.ManyToManyField(blank=True, null=True, related_name='professor_subjects', to='reviews.Course')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('full_name',),
            },
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('review', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='review_votes', to='reviews.Review')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_votes', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='review',
            name='professor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='professor_reviews', to='reviews.Teacher'),
        ),
        migrations.AddField(
            model_name='review',
            name='tags',
            field=models.ManyToManyField(related_name='review_tags', to='reviews.Tag'),
        ),
        migrations.AlterUniqueTogether(
            name='vote',
            unique_together={('user', 'review')},
        ),
        migrations.AlterUniqueTogether(
            name='teacher',
            unique_together={('full_name', 'code', 'department', 'university')},
        ),
        migrations.AlterUniqueTogether(
            name='review',
            unique_together={('author', 'professor')},
        ),
    ]
